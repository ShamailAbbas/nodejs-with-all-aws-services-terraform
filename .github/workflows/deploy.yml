name: Deploy Node.js App via Bastion

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Setup Bastion SSH key
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.BASTION_SSH_KEY }}" > ~/.ssh/bastion_key
          chmod 600 ~/.ssh/bastion_key

      # 3️⃣ Deploy to private EC2s via Bastion
      - name: Deploy Node.js app to private EC2s
        env:
          DB_SECRET_NAME: ${{ secrets.DB_SECRET_NAME }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
          CLOUDFRONT_URL: ${{ secrets.CLOUDFRONT_URL }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          PORT: ${{ secrets.PORT }}
        run: |
          # Split comma-separated private IPs secret into an array
          IFS=',' read -ra PRIVATE_EC2 <<< "${{ secrets.PRIVATE_EC2_IPS }}"

          for PRIVATE_IP in "${PRIVATE_EC2[@]}"; do
            echo "Deploying to $PRIVATE_IP via Bastion..."

            ssh -tt -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
                -o ConnectTimeout=10 -o ServerAliveInterval=30 \
                -i ~/.ssh/bastion_key \
                -o ProxyCommand="ssh -i ~/.ssh/bastion_key -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ServerAliveInterval=30 -W %h:%p ubuntu@${{ secrets.BASTION_PUBLIC_IP }}" \
                ubuntu@$PRIVATE_IP << 'REMOTE_EOF'
          set -e
          set -x  # Show each command executed for debugging

          APP_DIR="/home/ubuntu/nodejs-with-all-aws-services-terraform"
          BACKEND_DIR="$APP_DIR/video-cms-backend"

          # Clone or update repository
          if [ -d "$APP_DIR/.git" ]; then
            echo "Updating repository..."
            cd "$APP_DIR"
            git fetch --all
            git reset --hard origin/main
          else
            echo "Cloning repository..."
            git clone --depth=1 https://github.com/ShamailAbbas/nodejs-with-all-aws-services-terraform.git "$APP_DIR"
          fi

          echo "Current working directory: $(pwd)"

          # Install backend dependencies
          cd "$BACKEND_DIR"
          echo "Inside backend directory: $(pwd)"
          npm install --production

          # Create .env file from environment variables
          echo "Creating .env file..."
          cat > .env <<EOT
          DB_SECRET_NAME=${{ secrets.DB_SECRET_NAME }}
          AWS_REGION=${{ secrets.AWS_REGION }}
          S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}
          CLOUDFRONT_URL=${{ secrets.CLOUDFRONT_URL }}
          REDIS_HOST=${{ secrets.REDIS_HOST }}
          REDIS_PORT=${{ secrets.REDIS_PORT }}
          PORT=${{ secrets.PORT }}
          EOT

          # Stop existing PM2 process if running
          pm2 stop nodeapp || true

          # Start Node.js app with PM2
          pm2 start npm --name nodeapp -- start
          pm2 save
          sudo pm2 startup systemd -u ubuntu --hp /home/ubuntu

          echo "Deployment complete!"
          REMOTE_EOF

              done

